<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matrix Exponentiation on Shefin&#39;s Blog</title>
    <link>https://shefin-cse16.github.io/tags/matrix-exponentiation/</link>
    <description>Recent content in Matrix Exponentiation on Shefin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Feb 2020 21:44:41 +0600</lastBuildDate>
    
	<atom:link href="https://shefin-cse16.github.io/tags/matrix-exponentiation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Matrix Exponentiation: O(n²logx) per Query</title>
      <link>https://shefin-cse16.github.io/post/matrix-exponentiation-optimization/</link>
      <pubDate>Wed, 19 Feb 2020 21:44:41 +0600</pubDate>
      
      <guid>https://shefin-cse16.github.io/post/matrix-exponentiation-optimization/</guid>
      <description>[এই আর্টিকেল পড়তে অবশ্যই ম্যাট্রিক্স এক্সপোনেনশিয়েশনসম্পর্কে ভালো আইডিয়া থাকতে হবে । ]
একটা প্রবলেম চিন্তা করা যাক। $100$টি নোডের একটি গ্রাফ দেওয়া আছে । গ্রাফের নোডগুলো বাই-ডিরেকশনাল এজ দিয়ে কানেক্টেড এবং যেকোনো $2$টি এজের মাঝে একাধিক এজ নেই । $1000$টি কুয়েরী থাকবে । প্রত্যেক কুয়েরীতে দুইটি পূর্ণসংখ্যা $u$ এবং $x$ ($x &amp;lt;= 10^7$) দেওয়া থাকবে। বলতে হবে, গ্রাফে নোড $u$ থেকে শুরু হয়ে কতগুলো $x$ লেংথের পথ আছে ।</description>
    </item>
    
  </channel>
</rss>